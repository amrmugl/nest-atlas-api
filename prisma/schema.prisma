// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String  @unique
  username String  @unique
  hash     String
  hashedRt String?

  profile Profile?

  @@map("users")
}

model Profile {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  firstname String
  lastname  String
  pictureId String?
  picture   String?
  about     String
  location  String

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  @@map("profile")
}

model Hotel {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  location    String
  description String
  temperature Int
  address     String  @unique
  price       Int
  featured    Boolean

  amenities  Amenity?
  activities Activities?

  @@map("hotel")
}

model Amenity {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  wifi           Boolean
  hotelResturant Boolean
  swimmingPool   Boolean
  innBar         Boolean
  parkingSpot    Boolean
  nightClub      Boolean

  hotel   Hotel @relation(fields: [hotelId], references: [id])
  hotelId Int   @unique

  @@map("amenities")
}

model SingleActivity {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  time        DateTime
  title       String
  description String
  imageUrl    String
  category    ActivityCategory

  activites    Activities @relation(fields: [activitiesId], references: [id])
  activitiesId Int

  @@map("singleActivity")
}

model Activities {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  activity SingleActivity[]
  hotel    Hotel            @relation(fields: [hotelId], references: [id])
  hotelId  Int              @unique

  @@map("activites")
}

enum ActivityCategory {
  natures_light
  cultural
  mordern_life
  popularity
  sun_and_sand
}
